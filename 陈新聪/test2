
string plusOne(string s, int j) {
    char ch[s.length()];
    strcpy(ch, s.c_str());
    if (ch[j] == '9')
        ch[j] = '0';
    else
        ch[j] += 1;
    string res(ch);
    return res;
}

string minusOne(string s, int j) {
    char ch[s.length()];
    strcpy(ch, s.c_str());
    if (ch[j] == '0')
        ch[j] = '9';
    else
        ch[j] -= 1;
    string res(ch);
    return res;
}

void BFS(string target) {
    queue<string> q;
    q.push("0000");

    while (!q.empty()) {
        int sz = q.size();
        for (int i = 0; i < sz; i++) {
            string cur = q.front(); q.pop();
            cout << cur << endl;
            for (int j = 0; j < 4; j++) {
                string up = plusOne(cur, j);
                string down = minusOne(cur, j);
                q.push(up);
                q.push(down);
            }
        }

    }
    return;
}